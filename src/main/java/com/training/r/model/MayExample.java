package com.training.r.model;

import java.util.ArrayList;
import java.util.List;

public class MayExample {
    
    protected String orderByClause;

   
    protected boolean distinct;

    
    protected List<Criteria> oredCriteria;

    
    public MayExample() {
        oredCriteria = new ArrayList<>();
    }

    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MAY
     *
     * @mbg.generated Wed Mar 01 15:58:39 ICT 2023
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MAY
     *
     * @mbg.generated Wed Mar 01 15:58:39 ICT 2023
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MAY
     *
     * @mbg.generated Wed Mar 01 15:58:39 ICT 2023
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MAY
     *
     * @mbg.generated Wed Mar 01 15:58:39 ICT 2023
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MAY
     *
     * @mbg.generated Wed Mar 01 15:58:39 ICT 2023
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MAY
     *
     * @mbg.generated Wed Mar 01 15:58:39 ICT 2023
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MAY
     *
     * @mbg.generated Wed Mar 01 15:58:39 ICT 2023
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MAY
     *
     * @mbg.generated Wed Mar 01 15:58:39 ICT 2023
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MAY
     *
     * @mbg.generated Wed Mar 01 15:58:39 ICT 2023
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MAY
     *
     * @mbg.generated Wed Mar 01 15:58:39 ICT 2023
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andMamayIsNull() {
            addCriterion("MaMay is null");
            return (Criteria) this;
        }

        public Criteria andMamayIsNotNull() {
            addCriterion("MaMay is not null");
            return (Criteria) this;
        }

        public Criteria andMamayEqualTo(String value) {
            addCriterion("MaMay =", value, "mamay");
            return (Criteria) this;
        }

        public Criteria andMamayNotEqualTo(String value) {
            addCriterion("MaMay <>", value, "mamay");
            return (Criteria) this;
        }

        public Criteria andMamayGreaterThan(String value) {
            addCriterion("MaMay >", value, "mamay");
            return (Criteria) this;
        }

        public Criteria andMamayGreaterThanOrEqualTo(String value) {
            addCriterion("MaMay >=", value, "mamay");
            return (Criteria) this;
        }

        public Criteria andMamayLessThan(String value) {
            addCriterion("MaMay <", value, "mamay");
            return (Criteria) this;
        }

        public Criteria andMamayLessThanOrEqualTo(String value) {
            addCriterion("MaMay <=", value, "mamay");
            return (Criteria) this;
        }

        public Criteria andMamayLike(String value) {
            addCriterion("MaMay like", value, "mamay");
            return (Criteria) this;
        }

        public Criteria andMamayNotLike(String value) {
            addCriterion("MaMay not like", value, "mamay");
            return (Criteria) this;
        }

        public Criteria andMamayIn(List<String> values) {
            addCriterion("MaMay in", values, "mamay");
            return (Criteria) this;
        }

        public Criteria andMamayNotIn(List<String> values) {
            addCriterion("MaMay not in", values, "mamay");
            return (Criteria) this;
        }

        public Criteria andMamayBetween(String value1, String value2) {
            addCriterion("MaMay between", value1, value2, "mamay");
            return (Criteria) this;
        }

        public Criteria andMamayNotBetween(String value1, String value2) {
            addCriterion("MaMay not between", value1, value2, "mamay");
            return (Criteria) this;
        }

        public Criteria andTrangthaiIsNull() {
            addCriterion("TrangThai is null");
            return (Criteria) this;
        }

        public Criteria andTrangthaiIsNotNull() {
            addCriterion("TrangThai is not null");
            return (Criteria) this;
        }

        public Criteria andTrangthaiEqualTo(String value) {
            addCriterion("TrangThai =", value, "trangthai");
            return (Criteria) this;
        }

        public Criteria andTrangthaiNotEqualTo(String value) {
            addCriterion("TrangThai <>", value, "trangthai");
            return (Criteria) this;
        }

        public Criteria andTrangthaiGreaterThan(String value) {
            addCriterion("TrangThai >", value, "trangthai");
            return (Criteria) this;
        }

        public Criteria andTrangthaiGreaterThanOrEqualTo(String value) {
            addCriterion("TrangThai >=", value, "trangthai");
            return (Criteria) this;
        }

        public Criteria andTrangthaiLessThan(String value) {
            addCriterion("TrangThai <", value, "trangthai");
            return (Criteria) this;
        }

        public Criteria andTrangthaiLessThanOrEqualTo(String value) {
            addCriterion("TrangThai <=", value, "trangthai");
            return (Criteria) this;
        }

        public Criteria andTrangthaiLike(String value) {
            addCriterion("TrangThai like", value, "trangthai");
            return (Criteria) this;
        }

        public Criteria andTrangthaiNotLike(String value) {
            addCriterion("TrangThai not like", value, "trangthai");
            return (Criteria) this;
        }

        public Criteria andTrangthaiIn(List<String> values) {
            addCriterion("TrangThai in", values, "trangthai");
            return (Criteria) this;
        }

        public Criteria andTrangthaiNotIn(List<String> values) {
            addCriterion("TrangThai not in", values, "trangthai");
            return (Criteria) this;
        }

        public Criteria andTrangthaiBetween(String value1, String value2) {
            addCriterion("TrangThai between", value1, value2, "trangthai");
            return (Criteria) this;
        }

        public Criteria andTrangthaiNotBetween(String value1, String value2) {
            addCriterion("TrangThai not between", value1, value2, "trangthai");
            return (Criteria) this;
        }

        public Criteria andVitriIsNull() {
            addCriterion("ViTri is null");
            return (Criteria) this;
        }

        public Criteria andVitriIsNotNull() {
            addCriterion("ViTri is not null");
            return (Criteria) this;
        }

        public Criteria andVitriEqualTo(String value) {
            addCriterion("ViTri =", value, "vitri");
            return (Criteria) this;
        }

        public Criteria andVitriNotEqualTo(String value) {
            addCriterion("ViTri <>", value, "vitri");
            return (Criteria) this;
        }

        public Criteria andVitriGreaterThan(String value) {
            addCriterion("ViTri >", value, "vitri");
            return (Criteria) this;
        }

        public Criteria andVitriGreaterThanOrEqualTo(String value) {
            addCriterion("ViTri >=", value, "vitri");
            return (Criteria) this;
        }

        public Criteria andVitriLessThan(String value) {
            addCriterion("ViTri <", value, "vitri");
            return (Criteria) this;
        }

        public Criteria andVitriLessThanOrEqualTo(String value) {
            addCriterion("ViTri <=", value, "vitri");
            return (Criteria) this;
        }

        public Criteria andVitriLike(String value) {
            addCriterion("ViTri like", value, "vitri");
            return (Criteria) this;
        }

        public Criteria andVitriNotLike(String value) {
            addCriterion("ViTri not like", value, "vitri");
            return (Criteria) this;
        }

        public Criteria andVitriIn(List<String> values) {
            addCriterion("ViTri in", values, "vitri");
            return (Criteria) this;
        }

        public Criteria andVitriNotIn(List<String> values) {
            addCriterion("ViTri not in", values, "vitri");
            return (Criteria) this;
        }

        public Criteria andVitriBetween(String value1, String value2) {
            addCriterion("ViTri between", value1, value2, "vitri");
            return (Criteria) this;
        }

        public Criteria andVitriNotBetween(String value1, String value2) {
            addCriterion("ViTri not between", value1, value2, "vitri");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MAY
     *
     * @mbg.generated do_not_delete_during_merge Wed Mar 01 15:58:39 ICT 2023
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MAY
     *
     * @mbg.generated Wed Mar 01 15:58:39 ICT 2023
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}